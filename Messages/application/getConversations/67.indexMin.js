"use strict";exports.id=67,exports.ids=[67],exports.modules={2067:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  CreateTokenCommand: () => (/* reexport */ CreateTokenCommand),\n  SSOOIDCClient: () => (/* reexport */ SSOOIDCClient)\n});\n\n// EXTERNAL MODULE: ../../node_modules/@smithy/middleware-endpoint/dist-es/index.js + 10 modules\nvar dist_es = __webpack_require__(4546);\n// EXTERNAL MODULE: ../../node_modules/@smithy/middleware-serde/dist-es/index.js + 3 modules\nvar middleware_serde_dist_es = __webpack_require__(8029);\n// EXTERNAL MODULE: ../../node_modules/@smithy/smithy-client/dist-es/index.js + 23 modules\nvar smithy_client_dist_es = __webpack_require__(1802);\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/EndpointParameters.js\nconst resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: "sso-oauth",\n    };\n};\nconst commonParams = {\n    UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },\n    Endpoint: { type: "builtInParams", name: "endpoint" },\n    Region: { type: "builtInParams", name: "region" },\n    UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },\n};\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/models/SSOOIDCServiceException.js\n\n\nclass SSOOIDCServiceException extends smithy_client_dist_es/* ServiceException */.TJ {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOOIDCServiceException.prototype);\n    }\n}\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/models/models_0.js\n\n\nclass AccessDeniedException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "AccessDeniedException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "AccessDeniedException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, AccessDeniedException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass AuthorizationPendingException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "AuthorizationPendingException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "AuthorizationPendingException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, AuthorizationPendingException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass ExpiredTokenException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "ExpiredTokenException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "ExpiredTokenException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InternalServerException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "InternalServerException",\n            $fault: "server",\n            ...opts,\n        });\n        this.name = "InternalServerException";\n        this.$fault = "server";\n        Object.setPrototypeOf(this, InternalServerException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InvalidClientException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "InvalidClientException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "InvalidClientException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, InvalidClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InvalidGrantException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "InvalidGrantException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "InvalidGrantException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, InvalidGrantException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InvalidRequestException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "InvalidRequestException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "InvalidRequestException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InvalidScopeException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "InvalidScopeException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "InvalidScopeException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, InvalidScopeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass SlowDownException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "SlowDownException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "SlowDownException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, SlowDownException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass UnauthorizedClientException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "UnauthorizedClientException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "UnauthorizedClientException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, UnauthorizedClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass UnsupportedGrantTypeException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "UnsupportedGrantTypeException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "UnsupportedGrantTypeException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, UnsupportedGrantTypeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InvalidRequestRegionException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "InvalidRequestRegionException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "InvalidRequestRegionException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, InvalidRequestRegionException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n        this.endpoint = opts.endpoint;\n        this.region = opts.region;\n    }\n}\nclass InvalidClientMetadataException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: "InvalidClientMetadataException",\n            $fault: "client",\n            ...opts,\n        });\n        this.name = "InvalidClientMetadataException";\n        this.$fault = "client";\n        Object.setPrototypeOf(this, InvalidClientMetadataException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nconst CreateTokenRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.clientSecret && { clientSecret: smithy_client_dist_es/* SENSITIVE_STRING */.$H }),\n    ...(obj.refreshToken && { refreshToken: smithy_client_dist_es/* SENSITIVE_STRING */.$H }),\n});\nconst CreateTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithy_client_dist_es/* SENSITIVE_STRING */.$H }),\n    ...(obj.refreshToken && { refreshToken: smithy_client_dist_es/* SENSITIVE_STRING */.$H }),\n    ...(obj.idToken && { idToken: smithy_client_dist_es/* SENSITIVE_STRING */.$H }),\n});\nconst CreateTokenWithIAMRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.refreshToken && { refreshToken: SENSITIVE_STRING }),\n    ...(obj.assertion && { assertion: SENSITIVE_STRING }),\n    ...(obj.subjectToken && { subjectToken: SENSITIVE_STRING }),\n});\nconst CreateTokenWithIAMResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n    ...(obj.refreshToken && { refreshToken: SENSITIVE_STRING }),\n    ...(obj.idToken && { idToken: SENSITIVE_STRING }),\n});\nconst RegisterClientResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.clientSecret && { clientSecret: SENSITIVE_STRING }),\n});\nconst StartDeviceAuthorizationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.clientSecret && { clientSecret: SENSITIVE_STRING }),\n});\n\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/core/dist-es/protocols/json/parseJsonBody.js\nvar parseJsonBody = __webpack_require__(2032);\n// EXTERNAL MODULE: ../../node_modules/@smithy/core/dist-es/index.js + 16 modules\nvar core_dist_es = __webpack_require__(6939);\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/protocols/Aws_restJson1.js\n\n\n\n\n\nconst se_CreateTokenCommand = async (input, context) => {\n    const b = (0,core_dist_es/* requestBuilder */.lI)(input, context);\n    const headers = {\n        "content-type": "application/json",\n    };\n    b.bp("/token");\n    let body;\n    body = JSON.stringify((0,smithy_client_dist_es/* take */.s)(input, {\n        clientId: [],\n        clientSecret: [],\n        code: [],\n        deviceCode: [],\n        grantType: [],\n        redirectUri: [],\n        refreshToken: [],\n        scope: (_) => (0,smithy_client_dist_es/* _json */.Ss)(_),\n    }));\n    b.m("POST").h(headers).b(body);\n    return b.build();\n};\nconst se_CreateTokenWithIAMCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        "content-type": "application/json",\n    };\n    b.bp("/token");\n    const query = map({\n        [_ai]: [, "t"],\n    });\n    let body;\n    body = JSON.stringify(take(input, {\n        assertion: [],\n        clientId: [],\n        code: [],\n        grantType: [],\n        redirectUri: [],\n        refreshToken: [],\n        requestedTokenType: [],\n        scope: (_) => _json(_),\n        subjectToken: [],\n        subjectTokenType: [],\n    }));\n    b.m("POST").h(headers).q(query).b(body);\n    return b.build();\n};\nconst se_RegisterClientCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        "content-type": "application/json",\n    };\n    b.bp("/client/register");\n    let body;\n    body = JSON.stringify(take(input, {\n        clientName: [],\n        clientType: [],\n        scopes: (_) => _json(_),\n    }));\n    b.m("POST").h(headers).b(body);\n    return b.build();\n};\nconst se_StartDeviceAuthorizationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        "content-type": "application/json",\n    };\n    b.bp("/device_authorization");\n    let body;\n    body = JSON.stringify(take(input, {\n        clientId: [],\n        clientSecret: [],\n        startUrl: [],\n    }));\n    b.m("POST").h(headers).b(body);\n    return b.build();\n};\nconst de_CreateTokenCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0,smithy_client_dist_es/* expectNonNull */.Y0)((0,smithy_client_dist_es/* expectObject */.Xk)(await (0,parseJsonBody/* parseJsonBody */.Y2)(output.body, context)), "body");\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        accessToken: smithy_client_dist_es/* expectString */.lK,\n        expiresIn: smithy_client_dist_es/* expectInt32 */.ET,\n        idToken: smithy_client_dist_es/* expectString */.lK,\n        refreshToken: smithy_client_dist_es/* expectString */.lK,\n        tokenType: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_CreateTokenWithIAMCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");\n    const doc = take(data, {\n        accessToken: __expectString,\n        expiresIn: __expectInt32,\n        idToken: __expectString,\n        issuedTokenType: __expectString,\n        refreshToken: __expectString,\n        scope: _json,\n        tokenType: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_RegisterClientCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");\n    const doc = take(data, {\n        authorizationEndpoint: __expectString,\n        clientId: __expectString,\n        clientIdIssuedAt: __expectLong,\n        clientSecret: __expectString,\n        clientSecretExpiresAt: __expectLong,\n        tokenEndpoint: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_StartDeviceAuthorizationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");\n    const doc = take(data, {\n        deviceCode: __expectString,\n        expiresIn: __expectInt32,\n        interval: __expectInt32,\n        userCode: __expectString,\n        verificationUri: __expectString,\n        verificationUriComplete: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await (0,parseJsonBody/* parseJsonErrorBody */.CG)(output.body, context),\n    };\n    const errorCode = (0,parseJsonBody/* loadRestJsonErrorCode */.cJ)(output, parsedOutput.body);\n    switch (errorCode) {\n        case "AccessDeniedException":\n        case "com.amazonaws.ssooidc#AccessDeniedException":\n            throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n        case "AuthorizationPendingException":\n        case "com.amazonaws.ssooidc#AuthorizationPendingException":\n            throw await de_AuthorizationPendingExceptionRes(parsedOutput, context);\n        case "ExpiredTokenException":\n        case "com.amazonaws.ssooidc#ExpiredTokenException":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case "InternalServerException":\n        case "com.amazonaws.ssooidc#InternalServerException":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case "InvalidClientException":\n        case "com.amazonaws.ssooidc#InvalidClientException":\n            throw await de_InvalidClientExceptionRes(parsedOutput, context);\n        case "InvalidGrantException":\n        case "com.amazonaws.ssooidc#InvalidGrantException":\n            throw await de_InvalidGrantExceptionRes(parsedOutput, context);\n        case "InvalidRequestException":\n        case "com.amazonaws.ssooidc#InvalidRequestException":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case "InvalidScopeException":\n        case "com.amazonaws.ssooidc#InvalidScopeException":\n            throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n        case "SlowDownException":\n        case "com.amazonaws.ssooidc#SlowDownException":\n            throw await de_SlowDownExceptionRes(parsedOutput, context);\n        case "UnauthorizedClientException":\n        case "com.amazonaws.ssooidc#UnauthorizedClientException":\n            throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n        case "UnsupportedGrantTypeException":\n        case "com.amazonaws.ssooidc#UnsupportedGrantTypeException":\n            throw await de_UnsupportedGrantTypeExceptionRes(parsedOutput, context);\n        case "InvalidRequestRegionException":\n        case "com.amazonaws.ssooidc#InvalidRequestRegionException":\n            throw await de_InvalidRequestRegionExceptionRes(parsedOutput, context);\n        case "InvalidClientMetadataException":\n        case "com.amazonaws.ssooidc#InvalidClientMetadataException":\n            throw await de_InvalidClientMetadataExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = (0,smithy_client_dist_es/* withBaseException */.jr)(SSOOIDCServiceException);\nconst de_AccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_AuthorizationPendingExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new AuthorizationPendingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_InternalServerExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new InternalServerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_InvalidClientExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_InvalidClientMetadataExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientMetadataException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_InvalidGrantExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidGrantException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_InvalidRequestRegionExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        endpoint: smithy_client_dist_es/* expectString */.lK,\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n        region: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestRegionException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_InvalidScopeExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidScopeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_SlowDownExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new SlowDownException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_UnauthorizedClientExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst de_UnsupportedGrantTypeExceptionRes = async (parsedOutput, context) => {\n    const contents = (0,smithy_client_dist_es/* map */.Tj)({});\n    const data = parsedOutput.body;\n    const doc = (0,smithy_client_dist_es/* take */.s)(data, {\n        error: smithy_client_dist_es/* expectString */.lK,\n        error_description: smithy_client_dist_es/* expectString */.lK,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnsupportedGrantTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0,smithy_client_dist_es/* decorateServiceException */.Mw)(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],\n    extendedRequestId: output.headers["x-amz-id-2"],\n    cfId: output.headers["x-amz-cf-id"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== "" &&\n    (!Object.getOwnPropertyNames(value).includes("length") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes("size") || value.size != 0);\nconst _ai = "aws_iam";\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/commands/CreateTokenCommand.js\n\n\n\n\n\n\n\nclass CreateTokenCommand extends smithy_client_dist_es/* Command */.uB\n    .classBuilder()\n    .ep({\n    ...commonParams,\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        (0,middleware_serde_dist_es/* getSerdePlugin */.TM)(config, this.serialize, this.deserialize),\n        (0,dist_es/* getEndpointPlugin */.rD)(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s("AWSSSOOIDCService", "CreateToken", {})\n    .n("SSOOIDCClient", "CreateTokenCommand")\n    .f(CreateTokenRequestFilterSensitiveLog, CreateTokenResponseFilterSensitiveLog)\n    .ser(se_CreateTokenCommand)\n    .de(de_CreateTokenCommand)\n    .build() {\n}\n\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/middleware-host-header/dist-es/index.js\nvar middleware_host_header_dist_es = __webpack_require__(1758);\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/middleware-logger/dist-es/index.js + 1 modules\nvar middleware_logger_dist_es = __webpack_require__(6170);\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js\nvar middleware_recursion_detection_dist_es = __webpack_require__(6692);\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/middleware-user-agent/dist-es/index.js + 3 modules\nvar middleware_user_agent_dist_es = __webpack_require__(3202);\n// EXTERNAL MODULE: ../../node_modules/@smithy/config-resolver/dist-es/index.js + 13 modules\nvar config_resolver_dist_es = __webpack_require__(512);\n// EXTERNAL MODULE: ../../node_modules/@smithy/middleware-content-length/dist-es/index.js\nvar middleware_content_length_dist_es = __webpack_require__(1320);\n// EXTERNAL MODULE: ../../node_modules/@smithy/middleware-retry/dist-es/index.js + 10 modules\nvar middleware_retry_dist_es = __webpack_require__(5263);\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/core/dist-es/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js + 14 modules\nvar resolveAwsSdkSigV4Config = __webpack_require__(1145);\n// EXTERNAL MODULE: ../../node_modules/@smithy/util-middleware/dist-es/index.js + 2 modules\nvar util_middleware_dist_es = __webpack_require__(2952);\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/auth/httpAuthSchemeProvider.js\n\n\nconst defaultSSOOIDCHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0,util_middleware_dist_es/* getSmithyContext */.u)(context).operation,\n        region: (await (0,util_middleware_dist_es/* normalizeProvider */.t)(config.region)()) ||\n            (() => {\n                throw new Error("expected `region` to be configured for `aws.auth#sigv4`");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: "aws.auth#sigv4",\n        signingProperties: {\n            name: "sso-oauth",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: "smithy.api#noAuth",\n    };\n}\nconst defaultSSOOIDCHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case "CreateToken": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case "RegisterClient": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case "StartDeviceAuthorization": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0,resolveAwsSdkSigV4Config/* resolveAwsSdkSigV4Config */.h)(config);\n    return {\n        ...config_0,\n    };\n};\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/package.json\nconst package_namespaceObject = {"rE":"3.549.0"};\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/credentialDefaultProvider.js\nconst defaultProvider = ((input) => {\n    return () => Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 4054)).then(({ defaultProvider }) => defaultProvider(input)());\n});\n\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/core/dist-es/client/emitWarningIfUnsupportedVersion.js\nvar emitWarningIfUnsupportedVersion = __webpack_require__(8397);\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/util-user-agent-node/dist-es/index.js + 3 modules\nvar util_user_agent_node_dist_es = __webpack_require__(1449);\n// EXTERNAL MODULE: ../../node_modules/@smithy/hash-node/dist-es/index.js\nvar hash_node_dist_es = __webpack_require__(5708);\n// EXTERNAL MODULE: ../../node_modules/@smithy/node-config-provider/dist-es/index.js + 4 modules\nvar node_config_provider_dist_es = __webpack_require__(8520);\n// EXTERNAL MODULE: ../../node_modules/@smithy/node-http-handler/dist-es/index.js + 15 modules\nvar node_http_handler_dist_es = __webpack_require__(6118);\n// EXTERNAL MODULE: ../../node_modules/@smithy/util-body-length-node/dist-es/index.js + 1 modules\nvar util_body_length_node_dist_es = __webpack_require__(8226);\n// EXTERNAL MODULE: ../../node_modules/@smithy/util-retry/dist-es/index.js + 8 modules\nvar util_retry_dist_es = __webpack_require__(4134);\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/core/dist-es/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js + 4 modules\nvar AwsSdkSigV4Signer = __webpack_require__(5491);\n// EXTERNAL MODULE: ../../node_modules/@smithy/url-parser/dist-es/index.js + 1 modules\nvar url_parser_dist_es = __webpack_require__(2640);\n// EXTERNAL MODULE: ../../node_modules/@smithy/util-base64/dist-es/index.js + 2 modules\nvar util_base64_dist_es = __webpack_require__(563);\n// EXTERNAL MODULE: ../../node_modules/@smithy/util-utf8/dist-es/index.js + 3 modules\nvar util_utf8_dist_es = __webpack_require__(7670);\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/util-endpoints/dist-es/index.js + 9 modules\nvar util_endpoints_dist_es = __webpack_require__(6775);\n// EXTERNAL MODULE: ../../node_modules/@smithy/util-endpoints/dist-es/index.js + 34 modules\nvar _smithy_util_endpoints_dist_es = __webpack_require__(6954);\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/ruleset.js\nconst u = "required", v = "fn", w = "argv", x = "ref";\nconst a = true, b = "isSet", c = "booleanEquals", d = "error", e = "endpoint", f = "tree", g = "PartitionResult", h = "getAttr", i = { [u]: false, "type": "String" }, j = { [u]: true, "default": false, "type": "Boolean" }, k = { [x]: "Endpoint" }, l = { [v]: c, [w]: [{ [x]: "UseFIPS" }, true] }, m = { [v]: c, [w]: [{ [x]: "UseDualStack" }, true] }, n = {}, o = { [v]: h, [w]: [{ [x]: g }, "supportsFIPS"] }, p = { [x]: g }, q = { [v]: c, [w]: [true, { [v]: h, [w]: [p, "supportsDualStack"] }] }, r = [l], s = [m], t = [{ [x]: "Region" }];\nconst _data = { version: "1.0", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: "Invalid Configuration: FIPS and custom endpoint are not supported", type: d }, { conditions: s, error: "Invalid Configuration: Dualstack and custom endpoint are not supported", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: "aws.partition", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, o] }, q], rules: [{ endpoint: { url: "https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: n, headers: n }, type: e }], type: f }, { error: "FIPS and DualStack are enabled, but this partition does not support one or both", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [o, a] }], rules: [{ conditions: [{ [v]: "stringEquals", [w]: [{ [v]: h, [w]: [p, "name"] }, "aws-us-gov"] }], endpoint: { url: "https://oidc.{Region}.amazonaws.com", properties: n, headers: n }, type: e }, { endpoint: { url: "https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}", properties: n, headers: n }, type: e }], type: f }, { error: "FIPS is enabled but this partition does not support FIPS", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: "https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: n, headers: n }, type: e }], type: f }, { error: "DualStack is enabled but this partition does not support DualStack", type: d }], type: f }, { endpoint: { url: "https://oidc.{Region}.{PartitionResult#dnsSuffix}", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: "Invalid Configuration: Missing Region", type: d }] };\nconst ruleSet = _data;\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/endpointResolver.js\n\n\n\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0,_smithy_util_endpoints_dist_es/* resolveEndpoint */.sO)(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n_smithy_util_endpoints_dist_es/* customEndpointFunctions */.mw.aws = util_endpoints_dist_es/* awsEndpointFunctions */.UF;\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/runtimeConfig.shared.js\n\n\n\n\n\n\n\n\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: "2019-06-10",\n        base64Decoder: config?.base64Decoder ?? util_base64_dist_es/* fromBase64 */.E,\n        base64Encoder: config?.base64Encoder ?? util_base64_dist_es/* toBase64 */.n,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSSOOIDCHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: "aws.auth#sigv4",\n                identityProvider: (ipc) => ipc.getIdentityProvider("aws.auth#sigv4"),\n                signer: new AwsSdkSigV4Signer/* AwsSdkSigV4Signer */.f(),\n            },\n            {\n                schemeId: "smithy.api#noAuth",\n                identityProvider: (ipc) => ipc.getIdentityProvider("smithy.api#noAuth") || (async () => ({})),\n                signer: new core_dist_es/* NoAuthSigner */.mR(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_dist_es/* NoOpLogger */.N4(),\n        serviceId: config?.serviceId ?? "SSO OIDC",\n        urlParser: config?.urlParser ?? url_parser_dist_es/* parseUrl */.D,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_dist_es/* fromUtf8 */.ar,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_dist_es/* toUtf8 */.Pq,\n    };\n};\n\n// EXTERNAL MODULE: ../../node_modules/@smithy/util-defaults-mode-node/dist-es/index.js + 3 modules\nvar util_defaults_mode_node_dist_es = __webpack_require__(2165);\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/runtimeConfig.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst runtimeConfig_getRuntimeConfig = (config) => {\n    (0,smithy_client_dist_es/* emitWarningIfUnsupportedVersion */.I9)(process.version);\n    const defaultsMode = (0,util_defaults_mode_node_dist_es/* resolveDefaultsModeConfig */.I)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_dist_es/* loadConfigsForDefaultMode */.lT);\n    const clientSharedValues = getRuntimeConfig(config);\n    (0,emitWarningIfUnsupportedVersion/* emitWarningIfUnsupportedVersion */.I)(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: "node",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_dist_es/* calculateBodyLength */.n,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0,util_user_agent_node_dist_es/* defaultUserAgent */.mJ)({ serviceId: clientSharedValues.serviceId, clientVersion: package_namespaceObject.rE }),\n        maxAttempts: config?.maxAttempts ?? (0,node_config_provider_dist_es/* loadConfig */.Z)(middleware_retry_dist_es/* NODE_MAX_ATTEMPT_CONFIG_OPTIONS */.qs),\n        region: config?.region ?? (0,node_config_provider_dist_es/* loadConfig */.Z)(config_resolver_dist_es/* NODE_REGION_CONFIG_OPTIONS */.GG, config_resolver_dist_es/* NODE_REGION_CONFIG_FILE_OPTIONS */.zH),\n        requestHandler: node_http_handler_dist_es/* NodeHttpHandler */.$c.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0,node_config_provider_dist_es/* loadConfig */.Z)({\n                ...middleware_retry_dist_es/* NODE_RETRY_MODE_CONFIG_OPTIONS */.kN,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_dist_es/* DEFAULT_RETRY_MODE */.L0,\n            }),\n        sha256: config?.sha256 ?? hash_node_dist_es/* Hash */.V.bind(null, "sha256"),\n        streamCollector: config?.streamCollector ?? node_http_handler_dist_es/* streamCollector */.kv,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0,node_config_provider_dist_es/* loadConfig */.Z)(config_resolver_dist_es/* NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS */.e$),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0,node_config_provider_dist_es/* loadConfig */.Z)(config_resolver_dist_es/* NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS */.Ko),\n    };\n};\n\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/region-config-resolver/dist-es/index.js + 3 modules\nvar region_config_resolver_dist_es = __webpack_require__(3119);\n// EXTERNAL MODULE: ../../node_modules/@smithy/protocol-http/dist-es/index.js + 5 modules\nvar protocol_http_dist_es = __webpack_require__(7624);\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/auth/httpAuthExtensionConfiguration.js\nconst getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nconst resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/runtimeExtensions.js\n\n\n\n\nconst asPartial = (t) => t;\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial((0,region_config_resolver_dist_es/* getAwsRegionExtensionConfiguration */.Rq)(runtimeConfig)),\n        ...asPartial((0,smithy_client_dist_es/* getDefaultExtensionConfiguration */.xA)(runtimeConfig)),\n        ...asPartial((0,protocol_http_dist_es/* getHttpHandlerExtensionConfiguration */.eS)(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...(0,region_config_resolver_dist_es/* resolveAwsRegionExtensionConfiguration */.$3)(extensionConfiguration),\n        ...(0,smithy_client_dist_es/* resolveDefaultRuntimeConfig */.uv)(extensionConfiguration),\n        ...(0,protocol_http_dist_es/* resolveHttpHandlerRuntimeConfig */.jt)(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/client-sso-oidc/dist-es/SSOOIDCClient.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass SSOOIDCClient extends smithy_client_dist_es/* Client */.Kj {\n    constructor(...[configuration]) {\n        const _config_0 = runtimeConfig_getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = (0,config_resolver_dist_es/* resolveRegionConfig */.TD)(_config_1);\n        const _config_3 = (0,dist_es/* resolveEndpointConfig */.Co)(_config_2);\n        const _config_4 = (0,middleware_retry_dist_es/* resolveRetryConfig */.$z)(_config_3);\n        const _config_5 = (0,middleware_host_header_dist_es/* resolveHostHeaderConfig */.OV)(_config_4);\n        const _config_6 = (0,middleware_user_agent_dist_es/* resolveUserAgentConfig */.Dc)(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use((0,middleware_retry_dist_es/* getRetryPlugin */.ey)(this.config));\n        this.middlewareStack.use((0,middleware_content_length_dist_es/* getContentLengthPlugin */.vK)(this.config));\n        this.middlewareStack.use((0,middleware_host_header_dist_es/* getHostHeaderPlugin */.TC)(this.config));\n        this.middlewareStack.use((0,middleware_logger_dist_es/* getLoggerPlugin */.Y7)(this.config));\n        this.middlewareStack.use((0,middleware_recursion_detection_dist_es/* getRecursionDetectionPlugin */.n4)(this.config));\n        this.middlewareStack.use((0,middleware_user_agent_dist_es/* getUserAgentPlugin */.sM)(this.config));\n        this.middlewareStack.use((0,core_dist_es/* getHttpAuthSchemeEndpointRuleSetPlugin */.wB)(this.config, {\n            httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n            identityProviderConfigProvider: this.getIdentityProviderConfigProvider(),\n        }));\n        this.middlewareStack.use((0,core_dist_es/* getHttpSigningPlugin */.lW)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n    getDefaultHttpAuthSchemeParametersProvider() {\n        return defaultSSOOIDCHttpAuthSchemeParametersProvider;\n    }\n    getIdentityProviderConfigProvider() {\n        return async (config) => new core_dist_es/* DefaultIdentityProviderConfig */.h$({\n            "aws.auth#sigv4": config.credentials,\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/token-providers/dist-es/loadSsoOidc.js\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2067\n')}};
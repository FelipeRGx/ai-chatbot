"use strict";exports.id=989,exports.ids=[989],exports.modules={1989:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  fromProcess: () => (/* reexport */ fromProcess)\n});\n\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@smithy/shared-ini-file-loader/dist-es/index.js + 14 modules\nvar dist_es = __webpack_require__(2254);\n// EXTERNAL MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@smithy/property-provider/dist-es/CredentialsProviderError.js\nvar CredentialsProviderError = __webpack_require__(7822);\n// EXTERNAL MODULE: external "child_process"\nvar external_child_process_ = __webpack_require__(2081);\n// EXTERNAL MODULE: external "util"\nvar external_util_ = __webpack_require__(3837);\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/getValidatedProcessCredentials.js\nconst getValidatedProcessCredentials = (profileName, data) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    return {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n        ...(data.CredentialScope && { credentialScope: data.CredentialScope }),\n    };\n};\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/resolveProcessCredentials.js\n\n\n\n\nconst resolveProcessCredentials = async (profileName, profiles, logger) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile["credential_process"];\n        if (credentialProcess !== undefined) {\n            const execPromise = (0,external_util_.promisify)(external_child_process_.exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials(profileName, data);\n            }\n            catch (error) {\n                throw new CredentialsProviderError/* CredentialsProviderError */.m(error.message, { logger });\n            }\n        }\n        else {\n            throw new CredentialsProviderError/* CredentialsProviderError */.m(`Profile ${profileName} did not contain credential_process.`, { logger });\n        }\n    }\n    else {\n        throw new CredentialsProviderError/* CredentialsProviderError */.m(`Profile ${profileName} could not be found in shared credentials file.`, {\n            logger,\n        });\n    }\n};\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/fromProcess.js\n\n\nconst fromProcess = (init = {}) => async () => {\n    init.logger?.debug("@aws-sdk/credential-provider-process - fromProcess");\n    const profiles = await (0,dist_es/* parseKnownFiles */.MX)(init);\n    return resolveProcessCredentials((0,dist_es/* getProfileName */.Jl)(init), profiles, init.logger);\n};\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/index.js\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk4OS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFPO0FBQ1A7QUFDQSwrQkFBK0IsYUFBYTtBQUM1QztBQUNBO0FBQ0EsK0JBQStCLGFBQWE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxhQUFhO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsaUNBQWlDO0FBQ3BFLGlDQUFpQyx1Q0FBdUM7QUFDeEUsc0NBQXNDLHVDQUF1QztBQUM3RTtBQUNBOzs7QUNyQnFFO0FBQ2hDO0FBQ0o7QUFDaUQ7QUFDM0U7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyw0QkFBUyxDQUFDLDRCQUFJO0FBQzlDO0FBQ0Esd0JBQXdCLFNBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxhQUFhO0FBQ3hEO0FBQ0EsdUJBQXVCLDhCQUE4QjtBQUNyRDtBQUNBO0FBQ0EsMEJBQTBCLHdEQUF3QixrQkFBa0IsUUFBUTtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isd0RBQXdCLFlBQVksYUFBYSx3Q0FBd0MsUUFBUTtBQUN2SDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isd0RBQXdCLFlBQVksYUFBYTtBQUNuRTtBQUNBLFNBQVM7QUFDVDtBQUNBOzs7QUNsQ2lGO0FBQ1Q7QUFDakUsOEJBQThCO0FBQ3JDO0FBQ0EsMkJBQTJCLG1DQUFlO0FBQzFDLFdBQVcseUJBQXlCLENBQUMsa0NBQWM7QUFDbkQ7OztBQ044QiIsInNvdXJjZXMiOlsid2VicGFjazovL2luZGV4Ly4uLy4uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLW5vZGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItcHJvY2Vzcy9kaXN0LWVzL2dldFZhbGlkYXRlZFByb2Nlc3NDcmVkZW50aWFscy5qcz8xYTA4Iiwid2VicGFjazovL2luZGV4Ly4uLy4uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLW5vZGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItcHJvY2Vzcy9kaXN0LWVzL3Jlc29sdmVQcm9jZXNzQ3JlZGVudGlhbHMuanM/ZTBjNCIsIndlYnBhY2s6Ly9pbmRleC8uLi8uLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1ub2RlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXByb2Nlc3MvZGlzdC1lcy9mcm9tUHJvY2Vzcy5qcz9jMGRhIiwid2VicGFjazovL2luZGV4Ly4uLy4uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLW5vZGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItcHJvY2Vzcy9kaXN0LWVzL2luZGV4LmpzPzkwNmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGdldFZhbGlkYXRlZFByb2Nlc3NDcmVkZW50aWFscyA9IChwcm9maWxlTmFtZSwgZGF0YSkgPT4ge1xuICAgIGlmIChkYXRhLlZlcnNpb24gIT09IDEpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoYFByb2ZpbGUgJHtwcm9maWxlTmFtZX0gY3JlZGVudGlhbF9wcm9jZXNzIGRpZCBub3QgcmV0dXJuIFZlcnNpb24gMS5gKTtcbiAgICB9XG4gICAgaWYgKGRhdGEuQWNjZXNzS2V5SWQgPT09IHVuZGVmaW5lZCB8fCBkYXRhLlNlY3JldEFjY2Vzc0tleSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IEVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNyZWRlbnRpYWxfcHJvY2VzcyByZXR1cm5lZCBpbnZhbGlkIGNyZWRlbnRpYWxzLmApO1xuICAgIH1cbiAgICBpZiAoZGF0YS5FeHBpcmF0aW9uKSB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRUaW1lID0gbmV3IERhdGUoKTtcbiAgICAgICAgY29uc3QgZXhwaXJlVGltZSA9IG5ldyBEYXRlKGRhdGEuRXhwaXJhdGlvbik7XG4gICAgICAgIGlmIChleHBpcmVUaW1lIDwgY3VycmVudFRpbWUpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNyZWRlbnRpYWxfcHJvY2VzcyByZXR1cm5lZCBleHBpcmVkIGNyZWRlbnRpYWxzLmApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGFjY2Vzc0tleUlkOiBkYXRhLkFjY2Vzc0tleUlkLFxuICAgICAgICBzZWNyZXRBY2Nlc3NLZXk6IGRhdGEuU2VjcmV0QWNjZXNzS2V5LFxuICAgICAgICAuLi4oZGF0YS5TZXNzaW9uVG9rZW4gJiYgeyBzZXNzaW9uVG9rZW46IGRhdGEuU2Vzc2lvblRva2VuIH0pLFxuICAgICAgICAuLi4oZGF0YS5FeHBpcmF0aW9uICYmIHsgZXhwaXJhdGlvbjogbmV3IERhdGUoZGF0YS5FeHBpcmF0aW9uKSB9KSxcbiAgICAgICAgLi4uKGRhdGEuQ3JlZGVudGlhbFNjb3BlICYmIHsgY3JlZGVudGlhbFNjb3BlOiBkYXRhLkNyZWRlbnRpYWxTY29wZSB9KSxcbiAgICB9O1xufTtcbiIsImltcG9ydCB7IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAc21pdGh5L3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBleGVjIH0gZnJvbSBcImNoaWxkX3Byb2Nlc3NcIjtcbmltcG9ydCB7IHByb21pc2lmeSB9IGZyb20gXCJ1dGlsXCI7XG5pbXBvcnQgeyBnZXRWYWxpZGF0ZWRQcm9jZXNzQ3JlZGVudGlhbHMgfSBmcm9tIFwiLi9nZXRWYWxpZGF0ZWRQcm9jZXNzQ3JlZGVudGlhbHNcIjtcbmV4cG9ydCBjb25zdCByZXNvbHZlUHJvY2Vzc0NyZWRlbnRpYWxzID0gYXN5bmMgKHByb2ZpbGVOYW1lLCBwcm9maWxlcywgbG9nZ2VyKSA9PiB7XG4gICAgY29uc3QgcHJvZmlsZSA9IHByb2ZpbGVzW3Byb2ZpbGVOYW1lXTtcbiAgICBpZiAocHJvZmlsZXNbcHJvZmlsZU5hbWVdKSB7XG4gICAgICAgIGNvbnN0IGNyZWRlbnRpYWxQcm9jZXNzID0gcHJvZmlsZVtcImNyZWRlbnRpYWxfcHJvY2Vzc1wiXTtcbiAgICAgICAgaWYgKGNyZWRlbnRpYWxQcm9jZXNzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGV4ZWNQcm9taXNlID0gcHJvbWlzaWZ5KGV4ZWMpO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHN0ZG91dCB9ID0gYXdhaXQgZXhlY1Byb21pc2UoY3JlZGVudGlhbFByb2Nlc3MpO1xuICAgICAgICAgICAgICAgIGxldCBkYXRhO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKHN0ZG91dC50cmltKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IEVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNyZWRlbnRpYWxfcHJvY2VzcyByZXR1cm5lZCBpbnZhbGlkIEpTT04uYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBnZXRWYWxpZGF0ZWRQcm9jZXNzQ3JlZGVudGlhbHMocHJvZmlsZU5hbWUsIGRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihlcnJvci5tZXNzYWdlLCB7IGxvZ2dlciB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoYFByb2ZpbGUgJHtwcm9maWxlTmFtZX0gZGlkIG5vdCBjb250YWluIGNyZWRlbnRpYWxfcHJvY2Vzcy5gLCB7IGxvZ2dlciB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjb3VsZCBub3QgYmUgZm91bmQgaW4gc2hhcmVkIGNyZWRlbnRpYWxzIGZpbGUuYCwge1xuICAgICAgICAgICAgbG9nZ2VyLFxuICAgICAgICB9KTtcbiAgICB9XG59O1xuIiwiaW1wb3J0IHsgZ2V0UHJvZmlsZU5hbWUsIHBhcnNlS25vd25GaWxlcyB9IGZyb20gXCJAc21pdGh5L3NoYXJlZC1pbmktZmlsZS1sb2FkZXJcIjtcbmltcG9ydCB7IHJlc29sdmVQcm9jZXNzQ3JlZGVudGlhbHMgfSBmcm9tIFwiLi9yZXNvbHZlUHJvY2Vzc0NyZWRlbnRpYWxzXCI7XG5leHBvcnQgY29uc3QgZnJvbVByb2Nlc3MgPSAoaW5pdCA9IHt9KSA9PiBhc3luYyAoKSA9PiB7XG4gICAgaW5pdC5sb2dnZXI/LmRlYnVnKFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1wcm9jZXNzIC0gZnJvbVByb2Nlc3NcIik7XG4gICAgY29uc3QgcHJvZmlsZXMgPSBhd2FpdCBwYXJzZUtub3duRmlsZXMoaW5pdCk7XG4gICAgcmV0dXJuIHJlc29sdmVQcm9jZXNzQ3JlZGVudGlhbHMoZ2V0UHJvZmlsZU5hbWUoaW5pdCksIHByb2ZpbGVzLCBpbml0LmxvZ2dlcik7XG59O1xuIiwiZXhwb3J0ICogZnJvbSBcIi4vZnJvbVByb2Nlc3NcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1989\n')}};
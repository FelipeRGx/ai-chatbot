"use strict";exports.id=419,exports.ids=[419],exports.modules={5419:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  fromProcess: () => (/* reexport */ fromProcess)\n});\n\n// EXTERNAL MODULE: ../../node_modules/@smithy/shared-ini-file-loader/dist-es/index.js + 15 modules\nvar dist_es = __webpack_require__(7073);\n// EXTERNAL MODULE: ../../node_modules/@smithy/property-provider/dist-es/index.js + 6 modules\nvar property_provider_dist_es = __webpack_require__(3631);\n// EXTERNAL MODULE: external "child_process"\nvar external_child_process_ = __webpack_require__(5317);\n// EXTERNAL MODULE: external "util"\nvar external_util_ = __webpack_require__(9023);\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/getValidatedProcessCredentials.js\nconst getValidatedProcessCredentials = (profileName, data) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    return {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n        ...(data.CredentialScope && { credentialScope: data.CredentialScope }),\n    };\n};\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/resolveProcessCredentials.js\n\n\n\n\nconst resolveProcessCredentials = async (profileName, profiles) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile["credential_process"];\n        if (credentialProcess !== undefined) {\n            const execPromise = (0,external_util_.promisify)(external_child_process_.exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials(profileName, data);\n            }\n            catch (error) {\n                throw new property_provider_dist_es/* CredentialsProviderError */.C1(error.message);\n            }\n        }\n        else {\n            throw new property_provider_dist_es/* CredentialsProviderError */.C1(`Profile ${profileName} did not contain credential_process.`);\n        }\n    }\n    else {\n        throw new property_provider_dist_es/* CredentialsProviderError */.C1(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n};\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/fromProcess.js\n\n\nconst fromProcess = (init = {}) => async () => {\n    init.logger?.debug("@aws-sdk/credential-provider-process", "fromProcess");\n    const profiles = await (0,dist_es/* parseKnownFiles */.YU)(init);\n    return resolveProcessCredentials((0,dist_es/* getProfileName */.Bz)(init), profiles);\n};\n\n;// CONCATENATED MODULE: ../../node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/index.js\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQxOS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFPO0FBQ1A7QUFDQSwrQkFBK0IsYUFBYTtBQUM1QztBQUNBO0FBQ0EsK0JBQStCLGFBQWE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxhQUFhO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsaUNBQWlDO0FBQ3BFLGlDQUFpQyx1Q0FBdUM7QUFDeEUsc0NBQXNDLHVDQUF1QztBQUM3RTtBQUNBOzs7QUNyQnFFO0FBQ2hDO0FBQ0o7QUFDaUQ7QUFDM0U7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyw0QkFBUyxDQUFDLDRCQUFJO0FBQzlDO0FBQ0Esd0JBQXdCLFNBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxhQUFhO0FBQ3hEO0FBQ0EsdUJBQXVCLDhCQUE4QjtBQUNyRDtBQUNBO0FBQ0EsMEJBQTBCLDBEQUF3QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMERBQXdCLFlBQVksYUFBYTtBQUN2RTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMERBQXdCLFlBQVksYUFBYTtBQUNuRTtBQUNBOzs7QUNoQ2lGO0FBQ1Q7QUFDakUsOEJBQThCO0FBQ3JDO0FBQ0EsMkJBQTJCLG1DQUFlO0FBQzFDLFdBQVcseUJBQXlCLENBQUMsa0NBQWM7QUFDbkQ7OztBQ044QiIsInNvdXJjZXMiOlsid2VicGFjazovL2luZGV4Ly4uLy4uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLW5vZGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItcHJvY2Vzcy9kaXN0LWVzL2dldFZhbGlkYXRlZFByb2Nlc3NDcmVkZW50aWFscy5qcz8xYTA4Iiwid2VicGFjazovL2luZGV4Ly4uLy4uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLW5vZGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItcHJvY2Vzcy9kaXN0LWVzL3Jlc29sdmVQcm9jZXNzQ3JlZGVudGlhbHMuanM/ZTBjNCIsIndlYnBhY2s6Ly9pbmRleC8uLi8uLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1ub2RlL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXByb2Nlc3MvZGlzdC1lcy9mcm9tUHJvY2Vzcy5qcz9jMGRhIiwid2VicGFjazovL2luZGV4Ly4uLy4uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLW5vZGUvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItcHJvY2Vzcy9kaXN0LWVzL2luZGV4LmpzPzkwNmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGdldFZhbGlkYXRlZFByb2Nlc3NDcmVkZW50aWFscyA9IChwcm9maWxlTmFtZSwgZGF0YSkgPT4ge1xuICAgIGlmIChkYXRhLlZlcnNpb24gIT09IDEpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoYFByb2ZpbGUgJHtwcm9maWxlTmFtZX0gY3JlZGVudGlhbF9wcm9jZXNzIGRpZCBub3QgcmV0dXJuIFZlcnNpb24gMS5gKTtcbiAgICB9XG4gICAgaWYgKGRhdGEuQWNjZXNzS2V5SWQgPT09IHVuZGVmaW5lZCB8fCBkYXRhLlNlY3JldEFjY2Vzc0tleSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IEVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNyZWRlbnRpYWxfcHJvY2VzcyByZXR1cm5lZCBpbnZhbGlkIGNyZWRlbnRpYWxzLmApO1xuICAgIH1cbiAgICBpZiAoZGF0YS5FeHBpcmF0aW9uKSB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRUaW1lID0gbmV3IERhdGUoKTtcbiAgICAgICAgY29uc3QgZXhwaXJlVGltZSA9IG5ldyBEYXRlKGRhdGEuRXhwaXJhdGlvbik7XG4gICAgICAgIGlmIChleHBpcmVUaW1lIDwgY3VycmVudFRpbWUpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNyZWRlbnRpYWxfcHJvY2VzcyByZXR1cm5lZCBleHBpcmVkIGNyZWRlbnRpYWxzLmApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGFjY2Vzc0tleUlkOiBkYXRhLkFjY2Vzc0tleUlkLFxuICAgICAgICBzZWNyZXRBY2Nlc3NLZXk6IGRhdGEuU2VjcmV0QWNjZXNzS2V5LFxuICAgICAgICAuLi4oZGF0YS5TZXNzaW9uVG9rZW4gJiYgeyBzZXNzaW9uVG9rZW46IGRhdGEuU2Vzc2lvblRva2VuIH0pLFxuICAgICAgICAuLi4oZGF0YS5FeHBpcmF0aW9uICYmIHsgZXhwaXJhdGlvbjogbmV3IERhdGUoZGF0YS5FeHBpcmF0aW9uKSB9KSxcbiAgICAgICAgLi4uKGRhdGEuQ3JlZGVudGlhbFNjb3BlICYmIHsgY3JlZGVudGlhbFNjb3BlOiBkYXRhLkNyZWRlbnRpYWxTY29wZSB9KSxcbiAgICB9O1xufTtcbiIsImltcG9ydCB7IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAc21pdGh5L3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBleGVjIH0gZnJvbSBcImNoaWxkX3Byb2Nlc3NcIjtcbmltcG9ydCB7IHByb21pc2lmeSB9IGZyb20gXCJ1dGlsXCI7XG5pbXBvcnQgeyBnZXRWYWxpZGF0ZWRQcm9jZXNzQ3JlZGVudGlhbHMgfSBmcm9tIFwiLi9nZXRWYWxpZGF0ZWRQcm9jZXNzQ3JlZGVudGlhbHNcIjtcbmV4cG9ydCBjb25zdCByZXNvbHZlUHJvY2Vzc0NyZWRlbnRpYWxzID0gYXN5bmMgKHByb2ZpbGVOYW1lLCBwcm9maWxlcykgPT4ge1xuICAgIGNvbnN0IHByb2ZpbGUgPSBwcm9maWxlc1twcm9maWxlTmFtZV07XG4gICAgaWYgKHByb2ZpbGVzW3Byb2ZpbGVOYW1lXSkge1xuICAgICAgICBjb25zdCBjcmVkZW50aWFsUHJvY2VzcyA9IHByb2ZpbGVbXCJjcmVkZW50aWFsX3Byb2Nlc3NcIl07XG4gICAgICAgIGlmIChjcmVkZW50aWFsUHJvY2VzcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCBleGVjUHJvbWlzZSA9IHByb21pc2lmeShleGVjKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBzdGRvdXQgfSA9IGF3YWl0IGV4ZWNQcm9taXNlKGNyZWRlbnRpYWxQcm9jZXNzKTtcbiAgICAgICAgICAgICAgICBsZXQgZGF0YTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShzdGRvdXQudHJpbSgpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjcmVkZW50aWFsX3Byb2Nlc3MgcmV0dXJuZWQgaW52YWxpZCBKU09OLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0VmFsaWRhdGVkUHJvY2Vzc0NyZWRlbnRpYWxzKHByb2ZpbGVOYW1lLCBkYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGRpZCBub3QgY29udGFpbiBjcmVkZW50aWFsX3Byb2Nlc3MuYCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoYFByb2ZpbGUgJHtwcm9maWxlTmFtZX0gY291bGQgbm90IGJlIGZvdW5kIGluIHNoYXJlZCBjcmVkZW50aWFscyBmaWxlLmApO1xuICAgIH1cbn07XG4iLCJpbXBvcnQgeyBnZXRQcm9maWxlTmFtZSwgcGFyc2VLbm93bkZpbGVzIH0gZnJvbSBcIkBzbWl0aHkvc2hhcmVkLWluaS1maWxlLWxvYWRlclwiO1xuaW1wb3J0IHsgcmVzb2x2ZVByb2Nlc3NDcmVkZW50aWFscyB9IGZyb20gXCIuL3Jlc29sdmVQcm9jZXNzQ3JlZGVudGlhbHNcIjtcbmV4cG9ydCBjb25zdCBmcm9tUHJvY2VzcyA9IChpbml0ID0ge30pID0+IGFzeW5jICgpID0+IHtcbiAgICBpbml0LmxvZ2dlcj8uZGVidWcoXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXByb2Nlc3NcIiwgXCJmcm9tUHJvY2Vzc1wiKTtcbiAgICBjb25zdCBwcm9maWxlcyA9IGF3YWl0IHBhcnNlS25vd25GaWxlcyhpbml0KTtcbiAgICByZXR1cm4gcmVzb2x2ZVByb2Nlc3NDcmVkZW50aWFscyhnZXRQcm9maWxlTmFtZShpbml0KSwgcHJvZmlsZXMpO1xufTtcbiIsImV4cG9ydCAqIGZyb20gXCIuL2Zyb21Qcm9jZXNzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5419\n')}};